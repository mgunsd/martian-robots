{"version":3,"sources":["assets/mars.gif","components/Header.tsx","components/Chart.tsx","assets/bg.webp","components/Screen.tsx","store/SampleMission.ts","store/missionSlice.ts","store/index.ts","components/FormUI.tsx","components/Form.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["HeaderBar","styled","Paper","background","display","flexDirection","alignItems","height","margin","padding","color","Header","title","alt","src","robot","Typography","variant","Chart","Screen","Grid","minHeight","width","backgroundSize","SampleMission","initialState","mission","gridSize","missionSlice","createSlice","name","reducers","resetMission","state","action","setMission","payload","shift","actions","store","configureStore","reducer","missionReducer","useSelector","InputCard","flex","Side","Box","Input","TextField","text","borderColor","Form","useState","setGrid","startPosition","setStartPosition","commands","setCommands","executionPlan","setExecutuionPlan","dispatch","useDispatch","label","fullWidth","defaultValue","value","onChange","e","target","helperText","id","Button","onClick","preventDefault","multiline","split","App","CssBaseline","container","spacing","item","xs","md","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0743a4b0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/mars.891a1e5f.gif\";","import { Paper, Typography } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport React from 'react';\nimport robot from 'assets/mars.gif';\n\nexport const HeaderBar = styled(Paper)({\n  background: '#6CA3A1',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  height: '100px',\n  margin: 20,\n  padding: 20,\n  color: '#FBB54D',\n});\n\ninterface HeaderProps {\n  title: string;\n}\n\nexport const Header: React.FC<HeaderProps> = ({ title }) => {\n  return (\n    <HeaderBar>\n      <img alt=\"Robot\" src={robot} height=\"80px\" />\n      <Typography variant=\"h3\">{title}</Typography>\n    </HeaderBar>\n  );\n};\n","import { Paper } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const Chart = styled(Paper)({\n  background: 'linear-gradient(45deg, #11151D55 30%, #FF8E5355 90%)',\n  display: 'flex',\n  flexDirection: 'row',\n  alignItems: 'center',\n  height: '500px',\n  margin: 20,\n  padding: 20,\n  color: '#FBB54D',\n});\n","export default __webpack_public_path__ + \"static/media/bg.d57af8cc.webp\";","import { Grid } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\nimport background from 'assets/bg.webp';\n\nexport const Screen = styled(Grid)({\n  background: `url(${background}) center center no-repeat`,\n  minHeight: '100vh',\n  width: '100%',\n  backgroundSize: 'cover',\n});\n","export const SampleMission = [\n  '0 0 N',\n  'LLLMMM',\n  '0 5 N',\n  'LLLRRRFFF',\n  '1 5 N',\n  'LLLRRRRRFFF',\n];\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { RootState } from './index';\nimport { SampleMission } from './SampleMission';\n\nexport interface MissionState {\n  mission: string[];\n  gridSize: string;\n}\n\nconst initialState: MissionState = {\n  mission: SampleMission,\n  gridSize: '5 5',\n};\n\nexport const missionSlice = createSlice({\n  name: 'mission',\n  initialState,\n  reducers: {\n    resetMission: (state, action: PayloadAction<void>) => {\n      state.mission = SampleMission;\n    },\n    setMission: (state, action: PayloadAction<string[]>) => {\n      state.gridSize = action.payload[0];\n      action.payload.shift();\n      state.mission = action.payload;\n    },\n  },\n});\n\nexport const { resetMission, setMission } = missionSlice.actions;\n\nexport const selectedMission = (state: RootState) => state.mission;\n\nexport default missionSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport missionReducer from './missionSlice';\n\nexport const store = configureStore({\n  reducer: {\n    mission: missionReducer,\n  },\n});\n\nexport type AppDispatch = typeof store.dispatch;\nexport type RootState = ReturnType<typeof store.getState>;\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Paper, Box, TextField } from '@material-ui/core';\nimport { styled } from '@material-ui/core/styles';\n\nexport const InputCard = styled(Paper)({\n  background: '#6CA3A1',\n  flexDirection: 'column',\n  display: 'flex',\n  flex: 1,\n  alignItems: 'center',\n  width: '100%',\n  margin: 8,\n  padding: 20,\n  color: '#FBB54D',\n});\nexport const Side = styled(Box)({\n  display: 'flex',\n  width: '100%',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  margin: 12,\n  color: '#FBB54D',\n});\n\nexport const Input = styled(TextField)({\n  margin: 10,\n  color: '#FBB54D',\n  text: '#FBB54D',\n  '& label.Mui-focused': {\n    color: '#FBB54D',\n  },\n  '& label': {\n    color: '#FBB54D',\n  },\n  '& input:valid': {\n    color: '#FBB54D',\n  },\n  '& .MuiInputAdornment-root': {\n    color: '#FBB54D',\n  },\n\n  '& .MuiOutlinedInput-root': {\n    '& fieldset': {\n      borderColor: '#FBB54D',\n    },\n    '&:hover fieldset': {\n      borderColor: '#FBB54D',\n    },\n    '&.Mui-focused fieldset': {\n      borderColor: '#FBB54D',\n    },\n  },\n});\n","import React, { useState } from 'react';\nimport { Typography, Button } from '@material-ui/core';\nimport { useAppDispatch } from 'store';\nimport { setMission } from 'store/missionSlice';\nimport { Side, InputCard, Input } from './FormUI';\nexport const Form = () => {\n  const [gridSize, setGrid] = useState('5 5');\n  const [startPosition, setStartPosition] = useState('0 0 N');\n  const [commands, setCommands] = useState('');\n  const [executionPlan, setExecutuionPlan] = useState('');\n  //const { mission } = useAppSelector(selectedMission);\n  const dispatch = useAppDispatch();\n\n  const addRobot = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    setExecutuionPlan(`${executionPlan}\\n${startPosition}\\n${commands}`);\n  };\n\n  const executeMission = (e: { preventDefault: () => void }) => {\n    e.preventDefault();\n    const mission = executionPlan.split(`\\n`);\n    dispatch(setMission(mission));\n  };\n\n  return (\n    <Side>\n      <InputCard>\n        <Typography variant=\"h5\">Grid Size</Typography>\n        <Input\n          label=\"X Y\"\n          variant=\"outlined\"\n          fullWidth\n          defaultValue=\"5 5\"\n          value={gridSize}\n          onChange={(e) => {\n            setGrid(e.target.value);\n            setExecutuionPlan(e.target.value);\n          }}\n          helperText=\"The upper-right coordinates of a rectangular world, the lower-left coordinates are assumed to be 0, 0\"\n        />\n      </InputCard>\n\n      <InputCard>\n        <Typography variant=\"h5\">Robot Parameters</Typography>\n        <Input\n          label=\"Start Position\"\n          variant=\"outlined\"\n          fullWidth\n          defaultValue=\"3 5\"\n          value={startPosition}\n          onChange={(e) => setStartPosition(e.target.value)}\n          helperText=\"A position consists of two integers specifying the initial coordinates of the robot and an orientation (N, S, E, W), all separated by whitespace on one line.\"\n        />\n        <Input\n          label=\"Command Sequence\"\n          id=\"outlined-start-adornment\"\n          variant=\"outlined\"\n          fullWidth\n          value={commands}\n          onChange={(e) => setCommands(e.target.value)}\n          defaultValue=\"Hello World\"\n          helperText=\"A robot instruction is a string of the letters “L”, “R”, and “F” on one line.\"\n        />\n        <Button onClick={addRobot} variant=\"contained\">\n          Add Robot\n        </Button>\n      </InputCard>\n      <InputCard variant=\"outlined\">\n        <Typography variant=\"h5\">Execution Plan</Typography>\n        <Input\n          label=\"Input\"\n          id=\"outlined-multiline-flexible\"\n          variant=\"outlined\"\n          fullWidth\n          multiline\n          value={executionPlan}\n          onChange={(e) => setExecutuionPlan(e.target.value)}\n          defaultValue=\"Hello World\"\n          helperText=\"Incorrect entry.\"\n        />\n        <Button onClick={executeMission} variant=\"contained\">\n          Execute Mission\n        </Button>\n      </InputCard>\n    </Side>\n  );\n};\n","import React from 'react';\nimport { CssBaseline, Grid } from '@material-ui/core';\nimport { Screen, Header, Chart, Form } from 'components';\n\nconst App = () => {\n  return (\n    <>\n      <CssBaseline />\n      <Screen container spacing={3}>\n        <Grid item xs={12}>\n          <Header title=\"Martian Robots\" />\n        </Grid>\n        <Grid item xs={12} md={4}>\n          <Form />\n        </Grid>\n        <Grid item xs={12} md={8}>\n          <Chart />\n        </Grid>\n      </Screen>\n    </>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './store';\nimport { Provider } from 'react-redux';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}